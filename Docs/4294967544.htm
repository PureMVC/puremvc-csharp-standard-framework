<!DOCTYPE html><html><head><title>IObserver</title><meta charset="UTF-8" /><link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous" /><link href="styles/default.css" type="text/css" rel="stylesheet" /></head><body><div class="container"><div class="row"><nav class="navigation col-sm-4"><div class="brand"><img src="styles/images/logo.png" /></div><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a><ul><li><a class="current" href="4294967544.htm">IObserver</a><ul><li><a class="" href="4294967544-Methods.htm">Methods</a></li><li><a class="" href="4294967544-Properties.htm">Properties</a></li></ul></li></ul></li></ul></nav><main class="col-sm-8"><div><section class="details"><h1>IObserver</h1><div class="summary">The interface definition for a PureMVC Observer. </div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a></span><span class="assembly"><em>Assembly:</em> PureMVC in (PureMVC.dll)
						</span></div><div class="syntax"><h2>Syntax</h2><div class="csharp code"><div>C#</div><pre><span class="keyword">public</span> <span class="keyword">interface</span> IObserver </pre></div></div></section><section class="remarks"><h2>Remarks</h2><p>In PureMVC, the <span class="code">Observer</span> class assumes these responsibilities: <ul><li>Encapsulate the notification (callback) method of the interested object.</li><li>Encapsulate the notification context (this) of the interested object.</li><li>Provide methods for setting the notification method and context.</li><li>Provide a method for notifying the interested object.</li></ul></p><p>PureMVC does not rely upon underlying event models such  as the one provided with Flash, and ActionScript 3 does  not have an inherent event model. </p><p>The Observer Pattern as implemented within PureMVC exists  to support event-driven communication between the  application and the actors of the MVC triad. </p><p>An Observer is an object that encapsulates information about an interested object with a notification method that should be called when an <span class="code">INotification</span> is broadcast. The Observer then acts as a proxy for notifying the interested object. </p><p>Observers can receive <span class="code">Notification</span>s by having their <span class="code">notifyObserver</span> method invoked, passing in an object implementing the <span class="code">INotification</span> interface, such as a subclass of <span class="code">Notification</span>. </p></section><section class="methods members"><h2>Methods</h2><div class="entry row"><div class="col-sm"><a href="4294967551.htm">CompareNotifyContext(Object)</a></div><div class="col-sm"><div class="summary">Compare the given object to the notificaiton context object. </div></div></div><div class="entry row"><div class="col-sm"><a href="4294967549.htm">NotifyObserver(INotification)</a></div><div class="col-sm"><div class="summary">Notify the interested object. </div></div></div></section><section class="properties members"><h2>Properties</h2><div class="entry row"><div class="col-sm"><a href="4294967554.htm">NotifyContext</a></div><div class="col-sm"><div class="summary">Set the notification context (this) of the interested object </div></div></div><div class="entry row"><div class="col-sm"><a href="4294967553.htm">NotifyMethod</a></div><div class="col-sm"><div class="summary">Set the notification method (callback) method of the interested object </div></div></div></section><section class="seealso"><h2>See also</h2><div><a href="4294967564.htm">IView</a></div><div><a href="4294967527.htm">INotification</a></div></section></div></main></div></div><script src="styles/site.js"></script></body></html>