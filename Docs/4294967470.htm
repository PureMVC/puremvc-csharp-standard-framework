<!DOCTYPE html><html><head><title>IController</title><meta charset="UTF-8" /><link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous" /><link href="styles/default.css" type="text/css" rel="stylesheet" /></head><body><div class="container"><div class="row"><nav class="navigation col-sm-4"><div class="brand"><img src="styles/images/logo.png" /></div><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a><ul><li><a class="current" href="4294967470.htm">IController</a><ul><li><a class="" href="4294967470-Methods.htm">Methods</a></li></ul></li></ul></li></ul></nav><main class="col-sm-8"><div><section class="details"><h1>IController</h1><div class="summary">The interface definition for a PureMVC Controller. </div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a></span><span class="assembly"><em>Assembly:</em> PureMVC in (PureMVC.dll)
						</span></div><div class="syntax"><h2>Syntax</h2><div class="csharp code"><div>C#</div><pre><span class="keyword">public</span> <span class="keyword">interface</span> IController </pre></div></div></section><section class="remarks"><h2>Remarks</h2><p>In PureMVC, an <span class="code">IController</span> implementor  follows the 'Command and Controller' strategy, and  assumes these responsibilities: <ul><li>Remembering which <span class="code">ICommand</span>s  are intended to handle which <span class="code">INotifications</span>. </li><li>Registering itself as an <span class="code">IObserver</span> with the <span class="code">View</span> for each <span class="code">INotification</span>  that it has an <span class="code">ICommand</span> mapping for. </li><li>Creating a new instance of the proper <span class="code">ICommand</span>  to handle a given <span class="code">INotification</span> when notified by the <span class="code">View</span>. </li><li>Calling the <span class="code">ICommand</span>'s <span class="code">execute</span>  method, passing in the <span class="code">INotification</span>. </li></ul></p></section><section class="methods members"><h2>Methods</h2><div class="entry row"><div class="col-sm"><a href="4294967474.htm">ExecuteCommand(INotification)</a></div><div class="col-sm"><div class="summary">Execute the <span class="code">ICommand</span> previously registered as the handler for <span class="code">INotification</span>s with the given notification name. </div></div></div><div class="entry row"><div class="col-sm"><a href="4294967478.htm">HasCommand(String)</a></div><div class="col-sm"><div class="summary">Check if a Command is registered for a given Notification  </div></div></div><div class="entry row"><div class="col-sm"><a href="4294967471.htm">RegisterCommand(String, Func&lt;ICommand&gt;)</a></div><div class="col-sm"><div class="summary">Register a particular <span class="code">ICommand</span> class as the handler  for a particular <span class="code">INotification</span>. </div></div></div><div class="entry row"><div class="col-sm"><a href="4294967476.htm">RemoveCommand(String)</a></div><div class="col-sm"><div class="summary">Remove a previously registered <span class="code">ICommand</span> to <span class="code">INotification</span> mapping. </div></div></div></section><section class="seealso"><h2>See also</h2><div><a href="4294967527.htm">INotification</a></div><div><a href="4294967467.htm">ICommand</a></div></section></div></main></div></div><script src="styles/site.js"></script></body></html>